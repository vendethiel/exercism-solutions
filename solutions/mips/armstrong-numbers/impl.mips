.globl is_armstrong_number

li $a0, 153

is_armstrong_number:
# t0=return
        move $t0, $ra
# t1=10
        li $t1, 10
# t2=num of digits
# t3=current number
        li $t2, 0
        move $t3, $a0
digitcount_start:
	beqz $t3, digitcount_end
	div $t3, $t3, $t1
	addi $t2, $t2, 1
	j digitcount_start
digitcount_end:

# t3=current number
# t4=rem
# t5=sum of powered number
# t6=current number of digits
# t7=sum
        move $t3, $a0
        li $t5, 0
sum_start:
        beqz $t3, sum_end
        div $t3, $t1
        mflo $t3
        mfhi $t4
        
        move $t6, $t2
        li $t7, 1
pow_start:
        beqz $t6, pow_end
        mul $t7, $t7, $t4
        subi $t6, $t6, 1
        j pow_start
pow_end:
        add $t5, $t5, $t7
        j sum_start
sum_end:

        li $v0, 1
        beq $a0, $t5, unequal
        li $v0, 0
unequal:
        jr $t0
